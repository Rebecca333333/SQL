#The first step of my project was to add a new table to my BIT database. I did this by downloading Spotify data off a site named Kaggle. 
#Then, I inserted all the data into a spreadsheet to create the new Spotify table.
#Using SQL, I analyzed the new data I entered into my database.

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then, I inserted the Spotify Data .csv into the table.

#Next, I started creating queries from my new Spotify table. 

1. What is the average duration for each track?
SELECT artist_name, track_name, AVG(duration_ms) AS average_duration
FROM BIT_DB.Spotifydata
GROUP BY duration_ms
ORDER BY duration_ms desc;

2. What were the top five songs with the most energy?
SELECT artist_name, track_name, energy
FROM BIT_DB.Spotifydata
ORDER BY energy desc
LIMIT 5;

3. Which artists have their total popularity greater than 90?
SELECT artist_name, SUM(popularity) AS popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING SUM(popularity)>90
ORDER BY popularity desc;

4. Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average 
popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name)
SELECT artist_name, average_popularity,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
